package com.thanhnhantn.demo;

import java.io.InputStream;
import java.util.Scanner;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelExec;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;

/**
 * Thong tin demo: Host: 107.167.183.162 user: root password:pQibf5967 port: 22
 * command1: ls
 * 
 * @author ThanhNhan - HieuMinh
 *
 */

public class SSHCommandExecutor {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		String host = null;
		String user = null;
		String password = null;
		String command1 = null;
		int port = 0;

		Scanner sc = new Scanner(System.in);
		System.out.println("Input your IP address: ");
		host = sc.nextLine();
		System.out.println("Input your ROOT access Username: ");
		user = sc.nextLine();
		System.out.println("Input password: ");
		password = sc.nextLine();

		System.out.println("Input your SSH port connect: ");
		port = Integer.parseInt((sc.nextLine()));

		// System.out.println("Input Command: ");
		// command1 = sc.nextLine();
		sc.close();
		try {
			java.util.Properties config = new java.util.Properties();
			config.put("StrictHostKeyChecking", "no");
			JSch jsch = new JSch();
			Session session = jsch.getSession(user, host, port);
			session.setPassword(password);
			session.setConfig(config);
			session.connect();
			System.out.println("Connected");
			while (true) {
				System.out.println("Input Command: ");
				command1 = sc.nextLine();
				Channel channel = session.openChannel("exec");
				((ChannelExec) channel).setCommand(command1);
				channel.setInputStream(null);
				((ChannelExec) channel).setErrStream(System.err);

				InputStream in = channel.getInputStream();
				channel.connect();
				byte[] tmp = new byte[1024];
				while (true) {
					while (in.available() > 0) {
						int i = in.read(tmp, 0, 1024);
						if (i < 0)
							break;
						System.out.print(new String(tmp, 0, i));
					}
					if (channel.isClosed()) {
						System.out.println("exit-status: "
								+ channel.getExitStatus());
						break;
					}
					try {
						Thread.sleep(1000);
					} catch (Exception ee) {
					}
				}
				channel.disconnect();
				session.disconnect();
				System.out.println("DONE");
			}// end while
		} catch (Exception e) {
			System.out.println("Khong the connect den server");
		}
	}

}